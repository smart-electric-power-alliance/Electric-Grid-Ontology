# baseURI: http://sv.cmu.edu/AWP/8.0/constraints
# imports: http://spinrdf.org/spl
# imports: http://sv.cmu.edu/AWP/8.0/ActorRoles
# imports: http://sv.cmu.edu/AWP/8.0/props
# prefix: constraints

@prefix afn: <http://jena.hpl.hp.com/ARQ/function#> .
@prefix arg: <http://spinrdf.org/arg#> .
@prefix constraints: <http://sv.cmu.edu/AWP/8.0/constraints#> .
@prefix fn: <http://www.w3.org/2005/xpath-functions#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://sv.cmu.edu/AWP/8.0/constraints>
  rdf:type owl:Ontology ;
  owl:imports <http://spinrdf.org/spl> ;
  owl:imports <http://sv.cmu.edu/AWP/8.0/ActorRoles> ;
  owl:imports <http://sv.cmu.edu/AWP/8.0/props> ;
  owl:versionInfo "Created with TopBraid Composer" ;
.
owl:Thing
  spin:constraint [
      rdf:type sp:Ask ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:eq ;
                sp:arg1 [
                    rdf:type afn:namespace ;
                    sp:arg1 spin:_this ;
                  ] ;
                sp:arg2 "http://sv.cmu.edu/AWP/8.0/entity#" ;
              ] ;
          ]
          [
            sp:object "false"^^xsd:boolean ;
            sp:predicate owl:deprecated ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "ascs" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#actorServiceCompositionService> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
        ) ;
      rdfs:comment "002 No specification of Actor, Service, ServiceComposition, or Contract." ;
    ] ;
  spin:constraint [
      rdf:type sp:Ask ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:eq ;
                sp:arg1 [
                    rdf:type afn:namespace ;
                    sp:arg1 spin:_this ;
                  ] ;
                sp:arg2 "http://sv.cmu.edu/AWP/8.0/entity#" ;
              ] ;
          ]
          [
            sp:object "false"^^xsd:boolean ;
            sp:predicate owl:deprecated ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "hierarchy" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#hierarchyConceptualLogicalPhysical> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
        ) ;
      rdfs:comment "001 No hierarchy specification was found." ;
    ] ;
  spin:constraint [
      rdf:type sp:Ask ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:eq ;
                sp:arg1 [
                    rdf:type afn:namespace ;
                    sp:arg1 spin:_this ;
                  ] ;
                sp:arg2 "http://sv.cmu.edu/AWP/8.0/entity#" ;
              ] ;
          ]
          [
            sp:object "false"^^xsd:boolean ;
            sp:predicate owl:deprecated ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "entity" ;
              ] ;
            sp:predicate <http://sv.cmu.edu/AWP/8.0/props#actorServiceCompositionService> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:lowerCase ;
                sp:arg1 [
                    sp:varName "entity" ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "entityLowerCase" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:and ;
                sp:arg1 [
                    rdf:type sp:and ;
                    sp:arg1 [
                        rdf:type sp:and ;
                        sp:arg1 [
                            rdf:type sp:not ;
                            sp:arg1 [
                                rdf:type fn:ends-with ;
                                sp:arg1 [
                                    sp:varName "entityLowerCase" ;
                                  ] ;
                                sp:arg2 "service" ;
                              ] ;
                          ] ;
                        sp:arg2 [
                            rdf:type sp:not ;
                            sp:arg1 [
                                rdf:type fn:ends-with ;
                                sp:arg1 [
                                    sp:varName "entityLowerCase" ;
                                  ] ;
                                sp:arg2 "contract" ;
                              ] ;
                          ] ;
                      ] ;
                    sp:arg2 [
                        rdf:type sp:not ;
                        sp:arg1 [
                            rdf:type fn:ends-with ;
                            sp:arg1 [
                                sp:varName "entityLowerCase" ;
                              ] ;
                            sp:arg2 "composition" ;
                          ] ;
                      ] ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:not ;
                    sp:arg1 [
                        rdf:type fn:contains ;
                        sp:arg1 [
                            sp:varName "entityLowerCase" ;
                          ] ;
                        sp:arg2 "actor" ;
                      ] ;
                  ] ;
              ] ;
          ]
        ) ;
      rdfs:comment "004 Invalid specification of Actor, Service, or ServiceComposition." ;
    ] ;
  spin:constraint [
      rdf:type sp:Ask ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:eq ;
                sp:arg1 [
                    rdf:type afn:namespace ;
                    sp:arg1 spin:_this ;
                  ] ;
                sp:arg2 "http://sv.cmu.edu/AWP/8.0/entity#" ;
              ] ;
          ]
          [
            sp:object "false"^^xsd:boolean ;
            sp:predicate owl:deprecated ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "hierarchy" ;
              ] ;
            sp:predicate <http://sv.cmu.edu/AWP/8.0/props#hierarchyConceptualLogicalPhysical> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:lowerCase ;
                sp:arg1 [
                    sp:varName "hierarchy" ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "hierarchyLowerCase" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:and ;
                sp:arg1 [
                    rdf:type sp:and ;
                    sp:arg1 [
                        rdf:type sp:and ;
                        sp:arg1 [
                            rdf:type sp:not ;
                            sp:arg1 [
                                rdf:type fn:contains ;
                                sp:arg1 [
                                    sp:varName "hierarchyLowerCase" ;
                                  ] ;
                                sp:arg2 "conceptual" ;
                              ] ;
                          ] ;
                        sp:arg2 [
                            rdf:type sp:not ;
                            sp:arg1 [
                                rdf:type fn:contains ;
                                sp:arg1 [
                                    sp:varName "hierarchyLowerCase" ;
                                  ] ;
                                sp:arg2 "logical" ;
                              ] ;
                          ] ;
                      ] ;
                    sp:arg2 [
                        rdf:type sp:not ;
                        sp:arg1 [
                            rdf:type fn:contains ;
                            sp:arg1 [
                                sp:varName "hierarchyLowerCase" ;
                              ] ;
                            sp:arg2 "physical" ;
                          ] ;
                      ] ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:not ;
                    sp:arg1 [
                        rdf:type fn:contains ;
                        sp:arg1 [
                            sp:varName "hierarchyLowerCase" ;
                          ] ;
                        sp:arg2 "implementation" ;
                      ] ;
                  ] ;
              ] ;
          ]
        ) ;
      rdfs:comment "003 Invalid hierarchy specification." ;
    ] ;
  spin:constraint [
      rdf:type sp:Ask ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:eq ;
                sp:arg1 [
                    rdf:type afn:namespace ;
                    sp:arg1 spin:_this ;
                  ] ;
                sp:arg2 "http://sv.cmu.edu/AWP/8.0/entity#" ;
              ] ;
          ]
          [
            sp:object "false"^^xsd:boolean ;
            sp:predicate owl:deprecated ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "hierarchy" ;
              ] ;
            sp:predicate <http://sv.cmu.edu/AWP/8.0/props#hierarchyConceptualLogicalPhysical> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:lowerCase ;
                sp:arg1 [
                    sp:varName "hierarchy" ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "hierarchyLowerCase" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type fn:contains ;
                sp:arg1 [
                    sp:varName "hierarchyLowerCase" ;
                  ] ;
                sp:arg2 "conceptual" ;
              ] ;
          ]
          [
            rdf:type sp:Union ;
            sp:elements (
                (
                  [
                    rdf:type sp:TriplePath ;
                    sp:object <http://sv.cmu.edu/AWP/8.0/ActorRoles#LogicalEntity> ;
                    sp:path [
                        rdf:type sp:SeqPath ;
                        sp:path1 rdf:type ;
                        sp:path2 [
                            rdf:type sp:ModPath ;
                            sp:modMax -2 ;
                            sp:modMin 0 ;
                            sp:subPath rdfs:subClassOf ;
                          ] ;
                      ] ;
                    sp:subject spin:_this ;
                  ]
                )
                (
                  [
                    rdf:type sp:TriplePath ;
                    sp:object <http://sv.cmu.edu/AWP/8.0/ActorRoles#PhysicalEntity> ;
                    sp:path [
                        rdf:type sp:SeqPath ;
                        sp:path1 rdf:type ;
                        sp:path2 [
                            rdf:type sp:ModPath ;
                            sp:modMax -2 ;
                            sp:modMin 0 ;
                            sp:subPath rdfs:subClassOf ;
                          ] ;
                      ] ;
                    sp:subject spin:_this ;
                  ]
                )
                (
                  [
                    rdf:type sp:TriplePath ;
                    sp:object <http://sv.cmu.edu/AWP/8.0/ActorRoles#ImplementationEntity> ;
                    sp:path [
                        rdf:type sp:SeqPath ;
                        sp:path1 rdf:type ;
                        sp:path2 [
                            rdf:type sp:ModPath ;
                            sp:modMax -2 ;
                            sp:modMin 0 ;
                            sp:subPath rdfs:subClassOf ;
                          ] ;
                      ] ;
                    sp:subject spin:_this ;
                  ]
                )
              ) ;
          ]
        ) ;
      rdfs:comment "005 Classification of \"Conceptual\" is inconsistent with rdf:type declaration. Need to fix one or the other." ;
    ] ;
  spin:constraint [
      rdf:type sp:Ask ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:eq ;
                sp:arg1 [
                    rdf:type afn:namespace ;
                    sp:arg1 spin:_this ;
                  ] ;
                sp:arg2 "http://sv.cmu.edu/AWP/8.0/entity#" ;
              ] ;
          ]
          [
            sp:object "false"^^xsd:boolean ;
            sp:predicate owl:deprecated ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "hierarchy" ;
              ] ;
            sp:predicate <http://sv.cmu.edu/AWP/8.0/props#hierarchyConceptualLogicalPhysical> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:lowerCase ;
                sp:arg1 [
                    sp:varName "hierarchy" ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "hierarchyLowerCase" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type fn:contains ;
                sp:arg1 [
                    sp:varName "hierarchyLowerCase" ;
                  ] ;
                sp:arg2 "implementation" ;
              ] ;
          ]
          [
            rdf:type sp:Union ;
            sp:elements (
                (
                  [
                    rdf:type sp:TriplePath ;
                    sp:object <http://sv.cmu.edu/AWP/8.0/ActorRoles#ConceptualEntity> ;
                    sp:path [
                        rdf:type sp:SeqPath ;
                        sp:path1 rdf:type ;
                        sp:path2 [
                            rdf:type sp:ModPath ;
                            sp:modMax -2 ;
                            sp:modMin 0 ;
                            sp:subPath rdfs:subClassOf ;
                          ] ;
                      ] ;
                    sp:subject spin:_this ;
                  ]
                )
                (
                  [
                    rdf:type sp:TriplePath ;
                    sp:object <http://sv.cmu.edu/AWP/8.0/ActorRoles#LogicalEntity> ;
                    sp:path [
                        rdf:type sp:SeqPath ;
                        sp:path1 rdf:type ;
                        sp:path2 [
                            rdf:type sp:ModPath ;
                            sp:modMax -2 ;
                            sp:modMin 0 ;
                            sp:subPath rdfs:subClassOf ;
                          ] ;
                      ] ;
                    sp:subject spin:_this ;
                  ]
                )
                (
                  [
                    rdf:type sp:TriplePath ;
                    sp:object <http://sv.cmu.edu/AWP/8.0/ActorRoles#PhysicalEntity> ;
                    sp:path [
                        rdf:type sp:SeqPath ;
                        sp:path1 rdf:type ;
                        sp:path2 [
                            rdf:type sp:ModPath ;
                            sp:modMax -2 ;
                            sp:modMin 0 ;
                            sp:subPath rdfs:subClassOf ;
                          ] ;
                      ] ;
                    sp:subject spin:_this ;
                  ]
                )
              ) ;
          ]
        ) ;
      rdfs:comment "008 Classification of \"Implementation\" is inconsistent with rdf:type declaration. Need to fix one or the other." ;
    ] ;
  spin:constraint [
      rdf:type sp:Ask ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:eq ;
                sp:arg1 [
                    rdf:type afn:namespace ;
                    sp:arg1 spin:_this ;
                  ] ;
                sp:arg2 "http://sv.cmu.edu/AWP/8.0/entity#" ;
              ] ;
          ]
          [
            sp:object "false"^^xsd:boolean ;
            sp:predicate owl:deprecated ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "hierarchy" ;
              ] ;
            sp:predicate <http://sv.cmu.edu/AWP/8.0/props#hierarchyConceptualLogicalPhysical> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:lowerCase ;
                sp:arg1 [
                    sp:varName "hierarchy" ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "hierarchyLowerCase" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type fn:contains ;
                sp:arg1 [
                    sp:varName "hierarchyLowerCase" ;
                  ] ;
                sp:arg2 "logical" ;
              ] ;
          ]
          [
            rdf:type sp:Union ;
            sp:elements (
                (
                  [
                    rdf:type sp:TriplePath ;
                    sp:object <http://sv.cmu.edu/AWP/8.0/ActorRoles#ConceptualEntity> ;
                    sp:path [
                        rdf:type sp:SeqPath ;
                        sp:path1 rdf:type ;
                        sp:path2 [
                            rdf:type sp:ModPath ;
                            sp:modMax -2 ;
                            sp:modMin 0 ;
                            sp:subPath rdfs:subClassOf ;
                          ] ;
                      ] ;
                    sp:subject spin:_this ;
                  ]
                )
                (
                  [
                    rdf:type sp:TriplePath ;
                    sp:object <http://sv.cmu.edu/AWP/8.0/ActorRoles#PhysicalEntity> ;
                    sp:path [
                        rdf:type sp:SeqPath ;
                        sp:path1 rdf:type ;
                        sp:path2 [
                            rdf:type sp:ModPath ;
                            sp:modMax -2 ;
                            sp:modMin 0 ;
                            sp:subPath rdfs:subClassOf ;
                          ] ;
                      ] ;
                    sp:subject spin:_this ;
                  ]
                )
                (
                  [
                    rdf:type sp:TriplePath ;
                    sp:object <http://sv.cmu.edu/AWP/8.0/ActorRoles#ImplementationEntity> ;
                    sp:path [
                        rdf:type sp:SeqPath ;
                        sp:path1 rdf:type ;
                        sp:path2 [
                            rdf:type sp:ModPath ;
                            sp:modMax -2 ;
                            sp:modMin 0 ;
                            sp:subPath rdfs:subClassOf ;
                          ] ;
                      ] ;
                    sp:subject spin:_this ;
                  ]
                )
              ) ;
          ]
        ) ;
      rdfs:comment "006 Classification of \"Logical\" is inconsistent with rdf:type declaration. Need to fix one or the other." ;
    ] ;
  spin:constraint [
      rdf:type sp:Ask ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:eq ;
                sp:arg1 [
                    rdf:type afn:namespace ;
                    sp:arg1 spin:_this ;
                  ] ;
                sp:arg2 "http://sv.cmu.edu/AWP/8.0/entity#" ;
              ] ;
          ]
          [
            sp:object "false"^^xsd:boolean ;
            sp:predicate owl:deprecated ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "hierarchy" ;
              ] ;
            sp:predicate <http://sv.cmu.edu/AWP/8.0/props#hierarchyConceptualLogicalPhysical> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:lowerCase ;
                sp:arg1 [
                    sp:varName "hierarchy" ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "hierarchyLowerCase" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type fn:contains ;
                sp:arg1 [
                    sp:varName "hierarchyLowerCase" ;
                  ] ;
                sp:arg2 "physical" ;
              ] ;
          ]
          [
            rdf:type sp:Union ;
            sp:elements (
                (
                  [
                    rdf:type sp:TriplePath ;
                    sp:object <http://sv.cmu.edu/AWP/8.0/ActorRoles#ConceptualEntity> ;
                    sp:path [
                        rdf:type sp:SeqPath ;
                        sp:path1 rdf:type ;
                        sp:path2 [
                            rdf:type sp:ModPath ;
                            sp:modMax -2 ;
                            sp:modMin 0 ;
                            sp:subPath rdfs:subClassOf ;
                          ] ;
                      ] ;
                    sp:subject spin:_this ;
                  ]
                )
                (
                  [
                    rdf:type sp:TriplePath ;
                    sp:object <http://sv.cmu.edu/AWP/8.0/ActorRoles#LogicalEntity> ;
                    sp:path [
                        rdf:type sp:SeqPath ;
                        sp:path1 rdf:type ;
                        sp:path2 [
                            rdf:type sp:ModPath ;
                            sp:modMax -2 ;
                            sp:modMin 0 ;
                            sp:subPath rdfs:subClassOf ;
                          ] ;
                      ] ;
                    sp:subject spin:_this ;
                  ]
                )
                (
                  [
                    rdf:type sp:TriplePath ;
                    sp:object <http://sv.cmu.edu/AWP/8.0/ActorRoles#ImplementationEntity> ;
                    sp:path [
                        rdf:type sp:SeqPath ;
                        sp:path1 rdf:type ;
                        sp:path2 [
                            rdf:type sp:ModPath ;
                            sp:modMax -2 ;
                            sp:modMin 0 ;
                            sp:subPath rdfs:subClassOf ;
                          ] ;
                      ] ;
                    sp:subject spin:_this ;
                  ]
                )
              ) ;
          ]
        ) ;
      rdfs:comment "007 Classification of \"Physical\" is inconsistent with rdf:type declaration. Need to fix one or the other." ;
    ] ;
  spin:constraint [
      rdf:type sp:Ask ;
      sp:where (
          [
            sp:object [
                sp:varName "o" ;
              ] ;
            sp:predicate [
                sp:varName "p" ;
              ] ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:eq ;
                sp:arg1 [
                    rdf:type afn:namespace ;
                    sp:arg1 [
                        sp:varName "p" ;
                      ] ;
                  ] ;
                sp:arg2 "http://www.w3.org/2004/02/skos/core#" ;
              ] ;
          ]
          [
            sp:object "true"^^xsd:boolean ;
            sp:predicate owl:deprecated ;
            sp:subject [
                sp:varName "o" ;
              ] ;
          ]
        ) ;
      rdfs:comment "010 SKOS relation points to a deprecated instance" ;
    ] ;
  spin:constraint [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object spin:ConstraintViolation ;
            sp:predicate rdf:type ;
            sp:subject _:b36523 ;
          ]
          [
            sp:object [
                sp:varName "error" ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject _:b36523 ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate spin:violationRoot ;
            sp:subject _:b36523 ;
          ]
          [
            sp:object [
                sp:varName "p" ;
              ] ;
            sp:predicate spin:violationPath ;
            sp:subject _:b36523 ;
          ]
          [
            sp:object [
                sp:varName "o" ;
              ] ;
            sp:predicate spin:violationValue ;
            sp:subject _:b36523 ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "o" ;
              ] ;
            sp:predicate [
                sp:varName "p" ;
              ] ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:eq ;
                sp:arg1 [
                    rdf:type afn:namespace ;
                    sp:arg1 [
                        sp:varName "p" ;
                      ] ;
                  ] ;
                sp:arg2 "http://www.w3.org/2004/02/skos/core#" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "types" ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "typeo" ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "o" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:ne ;
                sp:arg1 [
                    sp:varName "types" ;
                  ] ;
                sp:arg2 [
                    sp:varName "typeo" ;
                  ] ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 [
                    sp:varName "o" ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "localname" ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 [
                    sp:varName "typeo" ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "objectTypeName" ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "009 Inconsistent type for SKOS mapping to " ;
                sp:arg2 [
                    sp:varName "localname" ;
                  ] ;
                sp:arg3 " which is a " ;
                sp:arg4 [
                    sp:varName "objectTypeName" ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "error" ;
              ] ;
          ]
        ) ;
      rdfs:comment "009 SKOS relation points to an inconsistent type" ;
    ] ;
  spin:query [
      rdf:type sp:Select ;
      sp:distinct "true"^^xsd:boolean ;
      sp:orderBy (
          [
            rdf:type sp:Asc ;
            sp:expression [
                sp:varName "index" ;
              ] ;
          ]
        ) ;
      sp:resultVariables (
          [
            sp:varName "entity" ;
          ]
          [
            sp:varName "index" ;
          ]
          [
            sp:varName "name" ;
          ]
          [
            sp:varName "label" ;
          ]
          [
            sp:varName "actorOrService" ;
          ]
          [
            sp:varName "hierachy" ;
          ]
          [
            sp:varName "description" ;
          ]
          [
            sp:varName "originalAlternativeName" ;
          ]
          [
            sp:varName "type" ;
          ]
          [
            sp:varName "nistDomain" ;
          ]
          [
            sp:varName "cimZone" ;
          ]
          [
            sp:varName "euWp1ActorOrRole" ;
          ]
          [
            sp:varName "euWp1RelatedRole" ;
          ]
          [
            sp:varName "euWp1FunctionOrService" ;
          ]
        ) ;
      sp:where (
          (
            [
              rdf:type sp:TriplePath ;
              sp:object owl:Thing ;
              sp:path [
                  rdf:type sp:SeqPath ;
                  sp:path1 rdf:type ;
                  sp:path2 [
                      rdf:type sp:ModPath ;
                      sp:modMax -2 ;
                      sp:modMin 0 ;
                      sp:subPath rdfs:subClassOf ;
                    ] ;
                ] ;
              sp:subject [
                  sp:varName "entity" ;
                ] ;
            ]
          )
          [
            sp:object [
                sp:varName "index" ;
              ] ;
            sp:predicate <http://topbraid.org/tables#rowIndex> ;
            sp:subject [
                sp:varName "entity" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "name" ;
              ] ;
            sp:predicate <http://sv.cmu.edu/AWP/8.0/props#entityName> ;
            sp:subject [
                sp:varName "entity" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "label" ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "entity" ;
              ] ;
          ]
          [
            sp:object "false"^^xsd:boolean ;
            sp:predicate owl:deprecated ;
            sp:subject [
                sp:varName "entity" ;
              ] ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "actorOrService" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#actorServiceCompositionService> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "hierarchy" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#hierarchyConceptualLogicalPhysical> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "description" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#description_0> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "originalAlternativeName" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#originalAlternativeEntityNameIncludingEntityNamesAreDuplicates> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "type" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#type> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "nistDomain" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#nISTLegacyDomain> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "cimZone" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#manufacturerCIMIECTypeOfZone> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "euWp1ActorOrRole" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#actorTypeOrRole> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "euWp1RelatedRole" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#relatedRole> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "euWp1FunctionOrService" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#businessFunctionService> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
        ) ;
      rdfs:comment "002 Ron's Spreadsheet generator with explicit order of attributes" ;
    ] ;
  spin:query [
      rdf:type sp:Select ;
      sp:distinct "true"^^xsd:boolean ;
      sp:orderBy (
          [
            rdf:type sp:Asc ;
            sp:expression [
                sp:varName "index" ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:TriplePath ;
            sp:object owl:Thing ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 rdf:type ;
                sp:path2 [
                    rdf:type sp:ModPath ;
                    sp:modMax -2 ;
                    sp:modMin 0 ;
                    sp:subPath rdfs:subClassOf ;
                  ] ;
              ] ;
            sp:subject [
                sp:varName "entity" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "index" ;
              ] ;
            sp:predicate <http://topbraid.org/tables#rowIndex> ;
            sp:subject [
                sp:varName "entity" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "name" ;
              ] ;
            sp:predicate <http://sv.cmu.edu/AWP/8.0/props#entityName> ;
            sp:subject [
                sp:varName "entity" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "label" ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "entity" ;
              ] ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "deprecated" ;
                    ] ;
                  sp:predicate owl:deprecated ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "actorOrService" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#actorServiceCompositionService> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "hierarchy" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#hierarchyConceptualLogicalPhysical> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "description" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#description_0> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "comment" ;
                    ] ;
                  sp:predicate rdfs:comment ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "seeAlso" ;
                    ] ;
                  sp:predicate rdfs:seeAlso ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "aDWPOriginalFocus" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#aDWPOriginalFocus> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "aMISystems" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#aMISystems> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "actorTypeOrRole" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#actorTypeOrRole> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "ahGCharging" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#ahGCharging> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "archiMateTerminologyLayers" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#archiMateTerminologyLayers> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "businessFunctionService" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#businessFunctionService> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "cSWGActors" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#cSWGActors> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "cSWGNISTIR7628" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#cSWGNISTIR7628> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "clusterLabel" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#clusterLabel> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "colC" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#colC> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "colD" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#colD> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "conceptualModel" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#conceptualModel> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "dKERepository" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#dKERepository> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "demandResponse" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#demandResponse> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "distributionGridMgmt" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#distributionGridMgmt> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "eG3" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#eG3> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "eIS" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#eIS> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "eNTSOERoleModel" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#eNTSOERoleModel> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "eUCommission" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#eUCommission> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "eUSCCGWP1" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#eUSCCGWP1> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "eUSourceunknown" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#eUSourceunknown> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "eUWGSPVers05" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#eUWGSPVers05> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "electricStorage" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#electricStorage> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "electricTransportaion" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#electricTransportaion> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "gUC" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#gUC> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "harmonizationNotes" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#harmonizationNotes> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "homeworkBlocks" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#homeworkBlocks> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "iEC61968IRM" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#iEC61968IRM> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "iECSG3" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#iECSG3> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "iECTC57WG19TC8WG6DERActorRoles" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#iECTC57WG19TC8WG6DERActorRoles> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "iEEEP2030Draft3" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#iEEEP2030Draft3> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "manufacturerCIMIECTypeOfZone" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#manufacturerCIMIECTypeOfZone> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "nAESB" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#nAESB> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "nISTLegacyDomain" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#nISTLegacyDomain> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "new" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#new> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "note" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#note> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "notes" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#notes> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "originalAlternativeEntityNameIncludingEntityNamesAreDuplicates" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#originalAlternativeEntityNameIncludingEntityNamesAreDuplicates> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "referenceDiagram" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#referenceDiagram> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "relatedRole" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#relatedRole> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "rolefromRoleTab" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#rolefromRoleTab> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "rowActionFlagDeletedHarmonizeh" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#rowActionFlagDeletedHarmonizeh> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "sGACConceptualArch" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#sGACConceptualArch> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "sMCG" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#sMCG> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "type" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#type> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "uSEUInput" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#uSEUInput> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "wASA" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#wASA> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
        ) ;
      rdfs:comment "003 Spreadsheet generator showing all columns in arbitrary order" ;
    ] ;
  spin:query [
      rdf:type sp:Select ;
      sp:distinct "true"^^xsd:boolean ;
      sp:orderBy (
          [
            rdf:type sp:Asc ;
            sp:expression [
                sp:varName "index" ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:Union ;
            sp:elements (
                (
                  [
                    rdf:type sp:TriplePath ;
                    sp:object <http://sv.cmu.edu/AWP/8.0/ActorRoles#Entity> ;
                    sp:path [
                        rdf:type sp:SeqPath ;
                        sp:path1 rdf:type ;
                        sp:path2 [
                            rdf:type sp:ModPath ;
                            sp:modMax -2 ;
                            sp:modMin 0 ;
                            sp:subPath rdfs:subClassOf ;
                          ] ;
                      ] ;
                    sp:subject [
                        sp:varName "entity" ;
                      ] ;
                  ]
                )
                (
                  [
                    sp:object <http://sv.cmu.edu/AWP/8.0/props#Combined-Elements-noduprows> ;
                    sp:predicate rdf:type ;
                    sp:subject [
                        sp:varName "entity" ;
                      ] ;
                  ]
                )
              ) ;
          ]
          [
            sp:object [
                sp:varName "index" ;
              ] ;
            sp:predicate <http://topbraid.org/tables#rowIndex> ;
            sp:subject [
                sp:varName "entity" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "name" ;
              ] ;
            sp:predicate <http://sv.cmu.edu/AWP/8.0/props#entityName> ;
            sp:subject [
                sp:varName "entity" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "label" ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "entity" ;
              ] ;
          ]
          [
            sp:object "false"^^xsd:boolean ;
            sp:predicate owl:deprecated ;
            sp:subject [
                sp:varName "entity" ;
              ] ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "actorOrService" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#actorServiceCompositionService> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "hierarchy" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#hierarchyConceptualLogicalPhysical> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "description" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#description_0> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "originalAlternativeName" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#originalAlternativeEntityNameIncludingEntityNamesAreDuplicates> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "type" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#type> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "nistDomain" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#nISTLegacyDomain> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "cimZone" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#manufacturerCIMIECTypeOfZone> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "euWp1ActorOrRole" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#actorTypeOrRole> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "euWp1RelatedRole" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#relatedRole> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "euWp1FunctionOrService" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#businessFunctionService> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
        ) ;
      rdfs:comment "001 Generate table of all entities and their properties" ;
    ] ;
  spin:query [
      rdf:type sp:Select ;
      sp:distinct "true"^^xsd:boolean ;
      sp:orderBy (
          [
            sp:varName "index" ;
          ]
        ) ;
      sp:resultVariables (
          [
            sp:varName "entity" ;
          ]
          [
            sp:varName "harmonize" ;
          ]
        ) ;
      sp:where (
          [
            sp:object <http://sv.cmu.edu/AWP/8.0/props#Combined-Elements-noduprows> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "entity" ;
              ] ;
          ]
          [
            sp:object "false"^^xsd:boolean ;
            sp:predicate owl:deprecated ;
            sp:subject [
                sp:varName "entity" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "index" ;
              ] ;
            sp:predicate <http://topbraid.org/tables#rowIndex> ;
            sp:subject [
                sp:varName "entity" ;
              ] ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "harmonize" ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#rowActionFlagDeletedHarmonizeh> ;
                  sp:subject [
                      sp:varName "entity" ;
                    ] ;
                ]
              ) ;
          ]
        ) ;
      rdfs:comment "007 Find all noduprows that are not deprecated" ;
    ] ;
  spin:query [
      rdf:type sp:Select ;
      sp:distinct "true"^^xsd:boolean ;
      sp:resultVariables (
          [
            sp:varName "s" ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:Bind ;
            sp:expression "1234" ;
            sp:variable [
                sp:varName "searchString" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "o" ;
              ] ;
            sp:predicate [
                sp:varName "p" ;
              ] ;
            sp:subject [
                sp:varName "s" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:or ;
                sp:arg1 [
                    rdf:type sp:regex ;
                    sp:arg1 [
                        sp:varName "o" ;
                      ] ;
                    sp:arg2 [
                        sp:varName "searchString" ;
                      ] ;
                    sp:arg3 "i" ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:regex ;
                    sp:arg1 [
                        rdf:type afn:localname ;
                        sp:arg1 [
                            sp:varName "s" ;
                          ] ;
                      ] ;
                    sp:arg2 [
                        sp:varName "searchString" ;
                      ] ;
                    sp:arg3 "i" ;
                  ] ;
              ] ;
          ]
        ) ;
      rdfs:comment "004 Find arbitrary string value anywhere, not just name. Replace \"1234\" with desired search string." ;
    ] ;
  spin:query [
      rdf:type sp:Select ;
      sp:distinct "true"^^xsd:boolean ;
      sp:resultVariables (
          [
            sp:varName "subject" ;
          ]
          [
            sp:varName "type" ;
          ]
          [
            sp:varName "val" ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:TriplePath ;
            sp:object <http://sv.cmu.edu/AWP/8.0/ActorRoles#Entity> ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 rdf:type ;
                sp:path2 [
                    rdf:type sp:ModPath ;
                    sp:modMax -2 ;
                    sp:modMin 1 ;
                    sp:subPath rdfs:subClassOf ;
                  ] ;
              ] ;
            sp:subject [
                sp:varName "subject" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "type" ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "subject" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "val" ;
              ] ;
            sp:predicate <http://sv.cmu.edu/AWP/8.0/props#rowActionFlagDeletedHarmonizeh> ;
            sp:subject [
                sp:varName "subject" ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:lower-case ;
                sp:arg1 [
                    sp:varName "val" ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "lval" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type fn:contains ;
                sp:arg1 [
                    sp:varName "lval" ;
                  ] ;
                sp:arg2 "h" ;
              ] ;
          ]
        ) ;
      rdfs:comment "006 Find all instances marked for harmonization" ;
    ] ;
  spin:query [
      rdf:type sp:Select ;
      sp:distinct "true"^^xsd:boolean ;
      sp:where (
          [
            rdf:type sp:TriplePath ;
            sp:object <http://sv.cmu.edu/AWP/8.0/ActorRoles#Entity> ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 rdf:type ;
                sp:path2 rdfs:subClassOf ;
              ] ;
            sp:subject [
                sp:varName "inst" ;
              ] ;
          ]
          [
            sp:object "false"^^xsd:boolean ;
            sp:predicate owl:deprecated ;
            sp:subject [
                sp:varName "inst" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "type" ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "inst" ;
              ] ;
          ]
        ) ;
      rdfs:comment "005 Find all instances that are only partially classified, or classified into incompatible categories" ;
    ] ;
  spin:query [
      rdf:type sp:Select ;
      sp:resultVariables (
          [
            sp:expression [
                rdf:type sp:Count ;
                sp:expression [
                    sp:varName "falseOnes" ;
                  ] ;
              ] ;
            sp:varName "notDeprecated" ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:TriplePath ;
            sp:object <http://sv.cmu.edu/AWP/8.0/ActorRoles#Entity> ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 rdf:type ;
                sp:path2 [
                    rdf:type sp:ModPath ;
                    sp:modMax -2 ;
                    sp:modMin 0 ;
                    sp:subPath rdfs:subClassOf ;
                  ] ;
              ] ;
            sp:subject [
                sp:varName "falseOnes" ;
              ] ;
          ]
          [
            sp:object "false"^^xsd:boolean ;
            sp:predicate owl:deprecated ;
            sp:subject [
                sp:varName "falseOnes" ;
              ] ;
          ]
        ) ;
      rdfs:comment "008 Count all non-deprecated instances of ar:Entity" ;
    ] ;
.
