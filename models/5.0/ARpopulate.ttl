# baseURI: http://sv.cmu.edu/AWP/5.0/ARpopulate
# imports: http://sv.cmu.edu/AWP/5.0/ActorRoles
# imports: http://topbraid.org/sparqlmotionfunctions
# imports: http://topbraid.org/sparqlmotionlib-tbc

@prefix ARpopulate:  <http://sv.cmu.edu/AWP/5.0/ARpopulate#> .
@prefix EntityList:  <file:///AWP/5.0/EntityList.xls#> .
@prefix fn:      <http://www.w3.org/2005/xpath-functions#> .
@prefix owl:     <http://www.w3.org/2002/07/owl#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sm:      <http://topbraid.org/sparqlmotion#> .
@prefix smf:     <http://topbraid.org/sparqlmotionfunctions#> .
@prefix sml:     <http://topbraid.org/sparqlmotionlib#> .
@prefix sp:      <http://spinrdf.org/sp#> .
@prefix spif:    <http://spinrdf.org/spif#> .
@prefix spin:    <http://spinrdf.org/spin#> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .

<http://sv.cmu.edu/AWP/5.0/ARpopulate>
      rdf:type owl:Ontology ;
      owl:imports <http://topbraid.org/sparqlmotionlib-tbc> , <http://topbraid.org/sparqlmotionfunctions> , <http://sv.cmu.edu/AWP/5.0/ActorRoles> ;
      owl:versionInfo "Created with TopBraid Composer"^^xsd:string .

ARpopulate:ApplyConstruct_1
      rdf:type sml:ApplyConstruct ;
      rdfs:label "Create Subclasses from spreadsheet"^^xsd:string ;
      sm:next ARpopulate:ApplyConstruct_2 ;
      sml:constructQuery
              [ rdf:type sp:Construct ;
                sp:templates ([ sp:object
                                    [ sp:varName "parent"^^xsd:string
                                    ] ;
                            sp:predicate rdfs:subClassOf ;
                            sp:subject
                                    [ sp:varName "newEntity"^^xsd:string
                                    ]
                          ] [ sp:object owl:Class ;
                            sp:predicate rdf:type ;
                            sp:subject
                                    [ sp:varName "newEntity"^^xsd:string
                                    ]
                          ] [ sp:object
                                    [ sp:varName "description"^^xsd:string
                                    ] ;
                            sp:predicate <http://sv.cmu.edu/AWP/5.0/ActorRoles#description> ;
                            sp:subject
                                    [ sp:varName "newEntity"^^xsd:string
                                    ]
                          ] [ sp:object
                                    [ sp:varName "type"^^xsd:string
                                    ] ;
                            sp:predicate <http://sv.cmu.edu/AWP/5.0/ActorRoles#type> ;
                            sp:subject
                                    [ sp:varName "newEntity"^^xsd:string
                                    ]
                          ] [ sp:object
                                    [ sp:varName "nistDomain"^^xsd:string
                                    ] ;
                            sp:predicate <http://sv.cmu.edu/AWP/5.0/ActorRoles#nistLegacyDomain> ;
                            sp:subject
                                    [ sp:varName "newEntity"^^xsd:string
                                    ]
                          ]) ;
                sp:where ([ sp:object
                                    [ sp:varName "roleactor"^^xsd:string
                                    ] ;
                            sp:predicate EntityList:actorRoleService ;
                            sp:subject
                                    [ sp:varName "subject"^^xsd:string
                                    ]
                          ] [ sp:object
                                    [ sp:varName "logicalphysical"^^xsd:string
                                    ] ;
                            sp:predicate EntityList:hierarchyConceptualLogicalPhysical ;
                            sp:subject
                                    [ sp:varName "subject"^^xsd:string
                                    ]
                          ] [ rdf:type sp:Bind ;
                            sp:expression
                                    [ rdf:type fn:concat ;
                                      sp:arg1 "ar:" ;
                                      sp:arg2 [ sp:varName "logicalphysical"^^xsd:string
                                              ] ;
                                      sp:arg3 [ sp:varName "roleactor"^^xsd:string
                                              ]
                                    ] ;
                            sp:variable
                                    [ sp:varName "class"^^xsd:string
                                    ]
                          ] [ rdf:type sp:Bind ;
                            sp:expression
                                    [ rdf:type spif:buildURI ;
                                      sp:arg1 [ sp:varName "class"^^xsd:string
                                              ]
                                    ] ;
                            sp:variable
                                    [ sp:varName "parent"^^xsd:string
                                    ]
                          ] [ sp:object
                                    [ sp:varName "name"^^xsd:string
                                    ] ;
                            sp:predicate EntityList:entityName ;
                            sp:subject
                                    [ sp:varName "subject"^^xsd:string
                                    ]
                          ] [ rdf:type sp:Bind ;
                            sp:expression
                                    [ rdf:type spif:camelCase ;
                                      sp:arg1 [ sp:varName "name"^^xsd:string
                                              ]
                                    ] ;
                            sp:variable
                                    [ sp:varName "camelName"^^xsd:string
                                    ]
                          ] [ rdf:type sp:Bind ;
                            sp:expression
                                    [ rdf:type spif:buildURI ;
                                      sp:arg1 [ rdf:type fn:concat ;
                                                sp:arg1 "ar:" ;
                                                sp:arg2 [ sp:varName "camelName"^^xsd:string
                                                        ]
                                              ]
                                    ] ;
                            sp:variable
                                    [ sp:varName "newEntity"^^xsd:string
                                    ]
                          ] [ sp:object
                                    [ sp:varName "description"^^xsd:string
                                    ] ;
                            sp:predicate EntityList:description ;
                            sp:subject
                                    [ sp:varName "subject"^^xsd:string
                                    ]
                          ] [ sp:object
                                    [ sp:varName "type"^^xsd:string
                                    ] ;
                            sp:predicate EntityList:type ;
                            sp:subject
                                    [ sp:varName "subject"^^xsd:string
                                    ]
                          ] [ sp:object
                                    [ sp:varName "nistDomain"^^xsd:string
                                    ] ;
                            sp:predicate EntityList:nISTLegacyDomain ;
                            sp:subject
                                    [ sp:varName "subject"^^xsd:string
                                    ]
                          ])
              ] ;
      sml:replace "true"^^xsd:boolean .

ARpopulate:ApplyConstruct_2
      rdf:type sml:ApplyConstruct ;
      rdfs:label "Add import statement"^^xsd:string ;
      sm:next ARpopulate:ExportToRDFFile_1 ;
      sml:constructQuery
              [ rdf:type sp:Construct ;
                sp:templates ([ sp:object <http://sv.cmu.edu/AWP/5.0/ActorRoles> ;
                            sp:predicate owl:imports ;
                            sp:subject
                                    [ sp:varName "namespaceURI"^^xsd:string
                                    ]
                          ]) ;
                sp:where ([ rdf:type sp:Bind ;
                            sp:expression
                                    [ rdf:type smf:buildURI ;
                                      sp:arg1 "http://sv.cmu.edu/AWP/5.0/ARSubclasses"
                                    ] ;
                            sp:variable
                                    [ sp:varName "namespaceURI"^^xsd:string
                                    ]
                          ])
              ] .

ARpopulate:ExportToRDFFile_1
      rdf:type sml:ExportToRDFFile ;
      rdfs:label "Write results to file"^^xsd:string ;
      sml:baseURI "http://sv.cmu.edu/AWP/5.0/ARSubclasses"^^xsd:string ;
      sml:targetFilePath "ARSubclasses.ttl"^^xsd:string .

<http://sv.cmu.edu/AWP/5.0/ARpopulate#Import-ActorRoles.ttl_1>
      rdf:type sml:ImportRDFFromWorkspace ;
      rdfs:label "Import ActorRoles.ttl"^^xsd:string ;
      sm:next ARpopulate:ApplyConstruct_1 ;
      sml:baseURI "http://sv.cmu.edu/AWP/5.0/ActorRoles"^^xsd:string ;
      sml:ignoreImports "false"^^xsd:boolean .

<http://sv.cmu.edu/AWP/5.0/ARpopulate#Import-EntityList.xls_1>
      rdf:type sml:ImportRDFFromWorkspace ;
      rdfs:label "Import EntityList.xls"^^xsd:string ;
      sm:next ARpopulate:ApplyConstruct_1 ;
      sml:baseURI "file:///AWP/5.0/EntityList.xls"^^xsd:string .

ARpopulate:ModifyPrefixes_1
      rdf:type sml:ModifyPrefixes ;
      rdfs:label "Add prefix definition"^^xsd:string ;
      sm:next ARpopulate:ApplyConstruct_1 ;
      sml:addedPrefix "EntityList file:///AWP/5.0/EntityList.xls#"^^xsd:string .
